{"timestamp":"2025-08-03T15:11:50.194454","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-03T15:11:50.196505","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_ml_monitoring.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-03T15:11:51.366336Z","level":"info","event":"Branching to retraining pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-03T15:11:51.366652","level":"info","event":"Done. Returned value was: retrain_model","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-03T15:11:51.366771","level":"info","event":"Branch into retrain_model","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-03T15:11:51.367160","level":"info","event":"Following branch {'retrain_model'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-03T15:11:51.368180","level":"info","event":"Skipping tasks [('skip_retrain', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-03T15:11:51.378993","level":"info","event":"Skipping downstream tasks.","logger":"task"}
