{"timestamp":"2025-08-04T07:45:58.649351","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-04T07:45:58.650294","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_ml_monitoring.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-04T07:45:59.903627","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:45:59.904782","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'python3 /opt/airflow/src/pipeline/monitor_drift.py']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:45:59.915812","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.312326","level":"info","event":"/opt/airflow/src/pipeline/monitor_drift.py:96: DeprecationWarning:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.312605","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.312659","level":"info","event":"datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.312746","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.316601","level":"info","event":"2025-08-04 07:46:02,316 - INFO - Saving report to database...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.316645","level":"info","event":"2025-08-04 07:46:02,316 - INFO - Preparing database and ensuring table exists...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.316671","level":"info","event":"2025-08-04 07:46:02,316 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.337288","level":"info","event":"2025-08-04 07:46:02,337 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.338701","level":"info","event":"2025-08-04 07:46:02,338 - INFO - Table `evidently_reports_raw` is ready.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.338819","level":"info","event":"2025-08-04 07:46:02,338 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.349584","level":"info","event":"2025-08-04 07:46:02,349 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.357270","level":"info","event":"2025-08-04 07:46:02,357 - INFO - Report successfully inserted into the database.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358241","level":"info","event":"                                 id  ...                  timestamp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358328","level":"info","event":"0  4be9c95ae27850bc8b787993119210c2  ... 2025-08-04 07:46:02.311598","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358377","level":"info","event":"1  049c27bc468185396cb787867f5199b5  ... 2025-08-04 07:46:02.311598","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358427","level":"info","event":"2  075aa40179baf93c90e71020d9236562  ... 2025-08-04 07:46:02.311598","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358478","level":"info","event":"3  e5db9a8c42c37ff7250dcaf3ccc53721  ... 2025-08-04 07:46:02.311598","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358524","level":"info","event":"4  933d7b59ea3e72d172859b0809e40122  ... 2025-08-04 07:46:02.311598","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358571","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358617","level":"info","event":"[5 rows x 4 columns]","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.358654","level":"info","event":"{\"drift_detected\": true}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.720287","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T07:46:02.721371","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198740b-598f-7fad-8efb-92d1ce62f55f'), task_id='detect_drift', dag_id='drift_detection_dag', run_id='manual__2025-08-04T07:43:51.859684+00:00', try_number=2, map_index=-1, hostname='55e626d89016', context_carrier=None, task=<Task(BashOperator): detect_drift>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=4, start_date=datetime.datetime(2025, 8, 4, 7, 45, 58, 398103, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/drift_detection_dag/runs/manual__2025-08-04T07%3A43%3A51.859684%2B00%3A00/tasks/detect_drift?try_number=2')","logger":"task"}
