{"timestamp":"2025-08-04T10:33:49.885199","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-04T10:33:49.886429","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_ml_monitoring.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-04T10:33:52.661252","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:52.662948","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'python3 /opt/airflow/src/pipeline/monitor_drift.py']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:52.683702","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.593232","level":"info","event":"/opt/airflow/src/pipeline/monitor_drift.py:96: DeprecationWarning:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.594099","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.594225","level":"info","event":"datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.594385","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.597754","level":"info","event":"2025-08-04 10:33:56,597 - INFO - Saving report to database...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.597919","level":"info","event":"2025-08-04 10:33:56,597 - INFO - Preparing database and ensuring table exists...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.598008","level":"info","event":"2025-08-04 10:33:56,597 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.649299","level":"info","event":"2025-08-04 10:33:56,648 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.653698","level":"info","event":"2025-08-04 10:33:56,653 - INFO - Table `evidently_reports_raw` is ready.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.654032","level":"info","event":"2025-08-04 10:33:56,653 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.673834","level":"info","event":"2025-08-04 10:33:56,673 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.682736","level":"info","event":"2025-08-04 10:33:56,682 - INFO - Report successfully inserted into the database.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.683880","level":"info","event":"                                 id  ...                  timestamp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684011","level":"info","event":"0  4be9c95ae27850bc8b787993119210c2  ... 2025-08-04 10:33:56.590498","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684104","level":"info","event":"1  049c27bc468185396cb787867f5199b5  ... 2025-08-04 10:33:56.590498","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684146","level":"info","event":"2  075aa40179baf93c90e71020d9236562  ... 2025-08-04 10:33:56.590498","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684182","level":"info","event":"3  e5db9a8c42c37ff7250dcaf3ccc53721  ... 2025-08-04 10:33:56.590498","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684238","level":"info","event":"4  933d7b59ea3e72d172859b0809e40122  ... 2025-08-04 10:33:56.590498","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684299","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684356","level":"info","event":"[5 rows x 4 columns]","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:56.684404","level":"info","event":"{\"drift_detected\": true}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:57.259094","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T10:33:57.265212","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019874a5-0744-79a6-a837-133e666ae187'), task_id='detect_drift', dag_id='drift_detection_dag', run_id='scheduled__2025-08-04T10:00:00+00:00', try_number=1, map_index=-1, hostname='55e626d89016', context_carrier=None, task=<Task(BashOperator): detect_drift>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=3, start_date=datetime.datetime(2025, 8, 4, 10, 33, 49, 486955, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/drift_detection_dag/runs/scheduled__2025-08-04T10%3A00%3A00%2B00%3A00/tasks/detect_drift?try_number=1')","logger":"task"}
