{"timestamp":"2025-08-04T19:00:00.384546","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-04T19:00:00.385391","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_ml_monitoring.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-04T19:00:01.826681","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:01.831363","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'python3 /opt/airflow/src/pipeline/monitor_drift.py']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:01.854797","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.789414","level":"info","event":"/opt/airflow/src/pipeline/monitor_drift.py:79: DeprecationWarning:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.791312","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.791486","level":"info","event":"datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.791800","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.796513","level":"info","event":"2025-08-04 19:00:04,796 - INFO - Saving report to database...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.796585","level":"info","event":"2025-08-04 19:00:04,796 - INFO - Preparing database and ensuring table exists...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.796654","level":"info","event":"2025-08-04 19:00:04,796 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.824402","level":"info","event":"2025-08-04 19:00:04,824 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.826127","level":"info","event":"2025-08-04 19:00:04,826 - INFO - Table `evidently_reports_raw` is ready.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.826333","level":"info","event":"2025-08-04 19:00:04,826 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.847728","level":"info","event":"2025-08-04 19:00:04,847 - INFO - Connecting to PostgreSQL DB...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.856256","level":"info","event":"2025-08-04 19:00:04,856 - INFO - Report successfully inserted into the database.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857264","level":"info","event":"                                 id  ...                  timestamp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857360","level":"info","event":"0  4be9c95ae27850bc8b787993119210c2  ... 2025-08-04 19:00:04.785200","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857427","level":"info","event":"1  049c27bc468185396cb787867f5199b5  ... 2025-08-04 19:00:04.785200","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857470","level":"info","event":"2  075aa40179baf93c90e71020d9236562  ... 2025-08-04 19:00:04.785200","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857495","level":"info","event":"3  e5db9a8c42c37ff7250dcaf3ccc53721  ... 2025-08-04 19:00:04.785200","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857549","level":"info","event":"4  933d7b59ea3e72d172859b0809e40122  ... 2025-08-04 19:00:04.785200","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857595","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857781","level":"info","event":"[5 rows x 4 columns]","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:04.857855","level":"info","event":"{\"drift_detected\": true}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:05.278479","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-04T19:00:05.283263","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01987674-73e9-71f9-a0b5-cc1fac44f088'), task_id='detect_drift', dag_id='drift_detection_dag', run_id='scheduled__2025-08-04T19:00:00+00:00', try_number=1, map_index=-1, hostname='55e626d89016', context_carrier=None, task=<Task(BashOperator): detect_drift>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=3, start_date=datetime.datetime(2025, 8, 4, 19, 0, 0, 234940, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/drift_detection_dag/runs/scheduled__2025-08-04T19%3A00%3A00%2B00%3A00/tasks/detect_drift?try_number=1')","logger":"task"}
