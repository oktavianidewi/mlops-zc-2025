{"timestamp":"2025-07-31T00:38:07.529279","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-31T00:38:07.529981","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_ml_training.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-31T00:38:07.567248","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T00:38:07.567808","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'python3 /opt/airflow/src/pipeline/train.py']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T00:38:07.576628","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T00:38:10.312909","level":"info","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/base.py:1363: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T00:38:10.313255","level":"info","event":"  return fit_method(estimator, *args, **kwargs)","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:23.695050","level":"info","event":"/home/airflow/.local/lib/python3.12/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:23.696419","level":"info","event":"  warnings.warn(","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:23.716452","level":"info","event":"/home/airflow/.local/lib/python3.12/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:23.716603","level":"info","event":"  warnings.warn(","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.248659","level":"info","event":"Registered model 'rf-classifier-reg-model' already exists. Creating a new version of this model...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.298699","level":"info","event":"2025/07/31 01:33:27 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: rf-classifier-reg-model, version 6","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.298835","level":"info","event":"Created version '6' of model 'rf-classifier-reg-model'.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.359682","level":"info","event":"File saved successfully to: /opt/airflow/src/pipeline/data/X.csv.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.359803","level":"info","event":"File saved successfully to: /opt/airflow/src/pipeline/data/X_train.csv.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.359859","level":"info","event":"File saved successfully to: /opt/airflow/src/pipeline/data/X_test.csv.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.359907","level":"info","event":"File saved successfully to: /opt/airflow/src/pipeline/data/y_train.csv.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.359957","level":"info","event":"File saved successfully to: /opt/airflow/src/pipeline/data/y_test.csv.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360027","level":"info","event":"Accuracy: 0.7207792207792207","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360093","level":"info","event":"Classification Report:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360145","level":"info","event":"              precision    recall  f1-score   support","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360199","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360251","level":"info","event":"           0       0.76      0.83      0.80       101","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360297","level":"info","event":"           1       0.61      0.51      0.56        53","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360361","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360405","level":"info","event":"    accuracy                           0.72       154","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360457","level":"info","event":"   macro avg       0.69      0.67      0.68       154","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360508","level":"info","event":"weighted avg       0.71      0.72      0.71       154","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360566","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360611","level":"info","event":"325fa729551a4391947085cecf6b1c12","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360675","level":"info","event":"üèÉ View run debonair-goat-318 at: http://host.docker.internal:5001/#/experiments/1/runs/325fa729551a4391947085cecf6b1c12","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:27.360770","level":"info","event":"üß™ View experiment at: http://host.docker.internal:5001/#/experiments/1","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:28.080611","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-07-31T01:33:28.085405","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01985dea-0bc4-7a6d-8d69-e9d7ced16ac9'), task_id='training_task', dag_id='training_ml', run_id='scheduled__2025-07-31T00:00:00+00:00', try_number=1, map_index=-1, hostname='257cef7fac08', context_carrier=None, task=<Task(BashOperator): training_task>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=3, start_date=datetime.datetime(2025, 7, 31, 0, 38, 7, 457176, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/training_ml/runs/scheduled__2025-07-31T00%3A00%3A00%2B00%3A00/tasks/training_task?try_number=1')","logger":"task"}
{"timestamp":"2025-07-31T01:33:29.289644","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"AirflowRuntimeError","exc_value":"API_SERVER_ERROR: {'status_code': 403, 'message': 'Invalid auth token: Signature has expired', 'detail': {'detail': 'Invalid auth token: Signature has expired'}}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":888,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1227,"name":"_push_xcom_if_needed"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":533,"name":"_xcom_push"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":80,"name":"set"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":203,"name":"send"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":263,"name":"_get_response"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":250,"name":"_from_frame"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-31T01:33:29.391794","level":"error","event":"Top level error","logger":"task","error_detail":[{"exc_type":"AirflowRuntimeError","exc_value":"API_SERVER_ERROR: {'status_code': 403, 'message': 'Invalid auth token: Signature has expired', 'detail': {'detail': 'Invalid auth token: Signature has expired'}}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1300,"name":"main"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":954,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":203,"name":"send"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":263,"name":"_get_response"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":250,"name":"_from_frame"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-31T01:33:29.403738Z","level":"warning","event":"Process exited abnormally","exit_code":1,"logger":"task"}
